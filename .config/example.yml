#━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
# Dolphin configuration
#━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

#   ┌──────────┐
#───┘ Instance └────────────────────────────────────────────────

# Your instance name
name: 'Dolphin'

# Your name
maintainerName: ''

# Youe email address
maintainerEmail: ''

#   ┌─────┐
#───┘ URL └─────────────────────────────────────────────────────

# Final accessible URL seen by a user.
url: https://example.tld/

# Listen port
port: 3000

#   ┌──────────────────────────┐
#───┘ PostgreSQL configuration └────────────────────────────────

db:
  host: localhost
  port: 5432

  # Database name
  db: dolphin

  # Auth
  user: example-dolphin-user
  pass: example-dolphin-pass

  # Whether disable Caching queries
  #disableCache: true

  # Extra Connection options
  #extra:
  #  ssl: true

#   ┌─────────────────────┐
#───┘ Redis configuration └─────────────────────────────────────

redis:
  host: localhost
  port: 6379
  #pass: example-pass

#   ┌────────────────────────────────────┐
#───┘ File storage (Drive) configuration └──────────────────────

drive:
  storage: 'fs'

# OR

#drive:
#  storage: 'minio'
#  bucket:
#  prefix:
#  endpoint:
#  port:
#  useSSL:
#  accessKey:
#  secretKey:

# S3/GCS example
#
# * Replace <endpoint> to
#     S3: see https://docs.aws.amazon.com/general/latest/gr/rande.html#s3_region
#     GCS: use 'storage.googleapis.com'
#
# * Replace <region> to
#     S3: see https://docs.aws.amazon.com/general/latest/gr/rande.html#s3_region
#     GCS: not needed (just delete the region line)
#
#drive:
#  storage: 'minio'
#  bucket: bucket-name
#  prefix: files
#  baseUrl: https://bucket-name.<endpoint>
#  endpoint: <endpoint>
#  region: <region>
#  useSSL: true
#  accessKey: XXX
#  secretKey: YYY

# S3/GCS example (with CDN, custom domain)
#
#drive:
#  storage: 'minio'
#  bucket: drive.example.com
#  prefix: files
#  baseUrl: https://drive.example.com
#  endpoint: <endpoint>
#  region: <region>
#  useSSL: true
#  accessKey: XXX
#  secretKey: YYY

#   ┌────────────────┐
#───┘ Service Worker └───────────────────────────────────────────

# If you want to enable ServiceWorker, you need to generate VAPID keys:
# Unless you have set your global node_modules location elsewhere,
# you need to run this in root.
# > npm install web-push -g
# > web-push generate-vapid-keys

#swPublicKey: 
#swPrivateKey: 

#   ┌───────────────┐
#───┘ ID generation └───────────────────────────────────────────

# You can select the ID generation method.
# You don't usually need to change this setting, but you can
# change it according to your preferences.

# Available methods:
# aid ... Short, Millisecond accuracy
# meid ... Similar to ObjectID, Millisecond accuracy
# ulid ... Millisecond accuracy
# objectid ... This is left for backward compatibility

# ONCE YOU HAVE STARTED THE INSTANCE, DO NOT CHANGE THE
# ID SETTINGS AFTER THAT!

id: 'aid'

#   ┌─────────────────────┐
#───┘ Other configuration └─────────────────────────────────────

# Whether disable HSTS
#disableHsts: true

# Number of worker processes
#clusterLimit: 1

# Job concurrency per worker
# deliverJobConcurrency: 64
# inboxJobConcurrency: 8

# Job rate limiter
# deliverJobPerSec: 64
# inboxJobPerSec: 8

# Job attempts
# deliverJobMaxAttempts: 12
# inboxJobMaxAttempts: 8

# Syslog option
#syslog:
#  host: localhost
#  port: 514

# Proxy for HTTP/HTTPS
#proxy: http://127.0.0.1:3128

# Proxy for SMTP/SMTPS
#proxySmtp: http://127.0.0.1:3128   # use HTTP/1.1 CONNECT
#proxySmtp: socks4://127.0.0.1:1080 # use SOCKS4
#proxySmtp: socks5://127.0.0.1:1080 # use SOCKS5

# Proxy for URL preview
#summalyProxy: http://example.com
